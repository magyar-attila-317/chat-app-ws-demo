[{"C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\index.tsx":"1","C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\App.tsx":"2","C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\Login.tsx":"3"},{"size":265,"mtime":1612053098689,"results":"4","hashOfConfig":"5"},{"size":2369,"mtime":1612053098706,"results":"6","hashOfConfig":"5"},{"size":1857,"mtime":1612053105425,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8d5kwb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\index.tsx",[],"C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\App.tsx",["16","17"],"import React, {useRef, useState} from 'react';\n// @ts-ignore\nimport SockJsClient from 'react-stomp';\nimport {Login} from './Login';\nimport {AccountDetailsModel} from './models/AccountDetails.model';\n\ninterface Greeting {\n    text: string\n}\n\nexport const App = () => {\n\n    const [messages, setMessages] = useState<Greeting[]>([]);\n    const [privateMessages, setPrivateMessages] = useState<Greeting[]>([]);\n\n    let wsRef: any = useRef<any>(null);\n    const [message, setMessage] = useState<string>('');\n    const [user, setUser] = useState<AccountDetailsModel | null>(null);\n\n    const handleMessage = (msg: any) => {\n        console.log('Received message:', JSON.stringify(msg));\n        setMessages((prevState: any[]) => [...prevState, msg]);\n    };\n\n    const handlePrivateMessage = (msg: any) => {\n        console.log('Received private message:', msg);\n        setPrivateMessages((prevState: any[]) => [...prevState, msg]);\n    };\n\n    const sendMessage = () => {\n        console.log('Sent message:', message);\n        setMessage('');\n        wsRef.sendMessage('/app/chat.send', `${user?.username}: ${message}`);\n    };\n\n    const sendPrivateMessage = () => {\n        console.log('Sent private message:', message);\n        setMessage('');\n        wsRef.sendMessage('/app/private.send', `${user?.username}: ${message}`);\n    };\n\n    const loggedInHandler = (userDetails: any) => {\n        setUser(userDetails);\n    };\n\n    return (\n        <div>\n            <React.Fragment>\n                <Login\n                    loginCallback={loggedInHandler}\n                />\n                <SockJsClient\n                    url='http://localhost:8080/ws'\n                    topics={['/topics/public', '/user/reply']}\n                    onMessage={handleMessage}\n                    ref={(client: any) => wsRef = client}\n                />\n                <div className='container'>\n                    <input\n                        onChange={e => setMessage(e.target.value)}\n                        value={message}\n                        type=\"text\"\n                    />\n                    <button onClick={sendMessage}>send</button>\n                </div>\n                <button onClick={sendPrivateMessage}>send private message</button>\n\n            </React.Fragment>\n            {messages.map((m, index) => <p key={index}>{m}</p>)}\n        </div>\n    );\n\n};\n",["18","19"],"C:\\Dev\\IdeaProjects\\chat-app-ws-demo\\chat-app-react\\src\\Login.tsx",[],{"ruleId":"20","severity":1,"message":"21","line":15,"column":12,"nodeType":"22","messageId":"23","endLine":15,"endColumn":27},{"ruleId":"20","severity":1,"message":"24","line":26,"column":11,"nodeType":"22","messageId":"23","endLine":26,"endColumn":31},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},"@typescript-eslint/no-unused-vars","'privateMessages' is assigned a value but never used.","Identifier","unusedVar","'handlePrivateMessage' is assigned a value but never used.","no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-global-assign","no-unsafe-negation"]